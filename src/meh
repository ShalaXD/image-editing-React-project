<button className="submitButton"
  type="submit"
  onClick={(e)=>this._handleSubmit(e)}>Upload Image</button>


  onSubmit={(e)=>this._handleSubmit(e)}

  _handleSubmit(e) {
    e.preventDefault();
    // TODO: do something with -> this.state.file
    console.log('handle uploading-', this.state.file);
  }

  class Toggle extends React.Component {
    constructor(props) {
      super(props);
      this.state = {isToggleOn: true};

      // This binding is necessary to make `this` work in the callback
      this.handleClick = this.handleClick.bind(this);
    }

    handleClick() {
      this.setState(prevState => ({
        isToggleOn: !prevState.isToggleOn
      }));
    }

    render() {
      return (
        <button onClick={this.handleClick}>
          {this.state.isToggleOn ? 'ON' : 'OFF'}
        </button>
      );
    }
  }

  class ImageDisplay extends React.Component {
    render() {
      return (
        <div className="image_display">
          <img src={noImage} className="image_dis" alt="no image"
          ref={(img) => {this.imageTag = img;}} />
        </div>
      )
    }
  }


  class FileUploader extends Component {
      constructor() {
          super();
          this.handleChange = this.handleChange.bind(this);
          this.state = { file: false };
      }
      handleChange(e) {
          this.setState({ file: e.target.value });
      }
      render(){
          const image = (this.state.file) ? <img src={this.state.file} alt=""/> : null;
          return(
              <div>
                  <input type="file" id="fileElem" multiple accept="image/*"  onChange={this.handleChange} style={{ display: 'none' }} />
                  <button href="#" id="fileSelect">
                      <label htmlFor="fileElem">Choose Image</label>
                   </button>
                  <div id="fileList">
                      {image}
                  </div>
              </div>
          );
      }
  }
  
